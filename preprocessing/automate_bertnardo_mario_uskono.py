# -*- coding: utf-8 -*-
"""Eksperimen Bertnardo Mario Uskono

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11Dj8CYJA9CUfbkw4Irya8xhyCbmJHUnF

# **1. Perkenalan Dataset**

### **Perkenalan Dataset: Bali Tourist Attractions Dataset from Google Maps**

#### **Deskripsi Dataset**

Dataset ini berisi informasi tentang tempat wisata di Bali yang dikumpulkan melalui scraping otomatis dari Google Maps. Dataset ini mencakup **761 tempat wisata** yang tersebar di **9 kabupaten/kota** di Pulau Bali. Tujuan dari dataset ini adalah untuk memberikan gambaran yang komprehensif tentang lokasi, kategori, dan popularitas destinasi wisata di Bali.

#### **Sumber Data**

Data dikumpulkan melalui **scraping otomatis** dari **Google Maps**. Rating dan link diperoleh langsung dari halaman tempat wisata masing-masing di Google Maps. Dataset ini mencakup berbagai kategori populer tempat wisata di Bali, mulai dari taman alam, pantai, situs budaya, hingga tempat wisata umum.

#### **Deskripsi Kolom**

* **nama**: Nama tempat wisata.
* **kategori**: Kategori/jenis tempat wisata (misalnya: Alam, Budaya, Rekreasi, Umum).
* **kabupaten_kota**: Kabupaten atau kota tempat wisata tersebut berada.
* **rating**: Rating rata-rata pengunjung (skala 1-5).
* **preferensi**: Klasifikasi preferensi wisata (misalnya: Wisata Alam, Wisata Budaya).
* **link_lokasi**: URL ke halaman lokasi tempat wisata di Google Maps.
* **latitude**: Koordinat latitude tempat wisata.
* **longitude**: Koordinat longitude tempat wisata.
* **link_gambar**: URL gambar tempat wisata atau teks pengganti.

#### **Tujuan Dataset**

* Mendukung penelitian dan analisis terkait pariwisata Bali.
* Memfasilitasi pengembangan aplikasi berbasis peta dan rekomendasi wisata menggunakan data nyata.
* Membantu dalam pemetaan dan promosi destinasi wisata Bali secara lebih efektif.
* Menyediakan data komprehensif untuk pemerintah daerah dan pemangku kepentingan industri pariwisata.

#### **Contoh Data**

| nama                | kategori | kabupaten_kota  | rating | preferensi      | link                                                    | latitude  | longitude   |
| ------------------- | -------- | ---------------- | ------ | --------------- | ------------------------------------------------------- | --------- | ----------- |
| Taman Mumbul Sangeh | Alam     | Kabupaten Badung | 4.6    | Wisata Alam     | [Link](https://www.google.com/maps/place/Taman+Mumbul)  | -8.483959 | 115.2122881 |
| Pantai Mengening    | Rekreasi | Kabupaten Badung | 4.7    | Wisata Rekreasi | [Link](https://www.google.com/maps/place/Pantai+Mengen) | -8.639532 | 115.1007188 |

#### **Cara Menggunakan Dataset**

* Dataset ini dapat diimpor dan digunakan dalam berbagai alat analisis data seperti Python (pandas), R, atau perangkat lunak GIS.
* Kolom **latitude** dan **longitude** dapat digunakan untuk memvisualisasikan tempat wisata di peta.
* Kolom **rating** dapat digunakan untuk analisis popularitas dan kualitas destinasi wisata.
* Kolom **kategori** dan **preferensi** dapat membantu dalam segmentasi jenis wisata.

#### **Lisensi**

Dataset ini disediakan untuk tujuan penelitian dan pengembangan aplikasi. Penggunaan dataset ini harus mematuhi kebijakan penggunaan data Google Maps dan menghormati hak kekayaan intelektual.

#### **Kontak**

Untuk pertanyaan atau diskusi lebih lanjut mengenai dataset ini, Anda dapat menghubungi:

* **Nama**: Bertnardo Mario Uskono
* **Email**: [bertnardouskono@gmail.com](mailto:bertnardouskono@gmail.com)

---

# **2. Import Library**

### Langkah 2: Import Library

Untuk memulai, kita perlu mengimpor pustaka (library) Python yang diperlukan untuk analisis data dan pembangunan model machine learning. Berikut adalah beberapa pustaka yang umum digunakan:

Pustaka-pustaka ini akan membantu dalam:
* **pandas** dan **numpy** untuk manipulasi data.
* **matplotlib** dan **seaborn** untuk visualisasi data.
* **mlflow** untuk pelacakan eksperimen dan manajemen model.
* **sklearn** untuk pembangunan dan evaluasi model machine learning.
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import mlflow
import mlflow.sklearn
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

"""# **3. Memuat Dataset**

### **Langkah 3: Memuat Dataset**

Sekarang, kita akan memuat dataset yang telah Anda pilih ke dalam notebook. Langkah ini sangat penting untuk memastikan bahwa dataset telah dimuat dengan benar dan dapat diproses lebih lanjut.

#### **Langkah 3.1: Memuat Dataset Menggunakan Pandas**
"""

# Menentukan path relatif dari file CSV
file_path = 'dataset_tempat_wisata_bali-raw.csv'

# Memuat dataset ke dalam DataFrame
df = pd.read_csv(file_path)

df.head()

"""
#### **Langkah 3.2: Memeriksa Dataset**

Setelah dataset dimuat, kita perlu memeriksa beberapa hal untuk memastikan data sudah benar:

1. **Struktur Dataset**: Pastikan kolom dan baris sudah benar.
2. **Tipe Data**: Pastikan tipe data pada setiap kolom sesuai (misalnya, kolom `rating` seharusnya bertipe float, `latitude` dan `longitude` seharusnya bertipe float).
3. **Missing Values**: Periksa apakah ada nilai yang hilang (missing) pada dataset.
"""

print(df.info())

print(df.describe())

print(df.isnull().sum())

"""### **Langkah 4: Exploratory Data Analysis (EDA)**

Setelah dataset berhasil dimuat, kita akan melakukan **Exploratory Data Analysis (EDA)** untuk memahami karakteristik dataset. Tujuan dari EDA adalah untuk mendapatkan wawasan tentang distribusi data, hubungan antar fitur, dan potensi masalah yang perlu diperbaiki (seperti missing values atau outliers).

#### **Langkah 4.1: Memvisualisasikan Distribusi Data**

Mari kita mulai dengan melihat distribusi data pada kolom-kolom penting, seperti **rating**, **kategori**, dan **preferensi**."""


# Visualisasi distribusi rating
plt.figure(figsize=(10, 6))
sns.histplot(df['rating'], bins=20, kde=True)
plt.title('Distribusi Rating Tempat Wisata')
plt.xlabel('Rating')
plt.ylabel('Frekuensi')
plt.show()

"""#### **Langkah 4.2: Menghitung Jumlah Unik pada Kolom Kategorikal**

Untuk kolom kategorikal seperti **kategori** dan **preferensi**, kita ingin mengetahui jumlah kategori unik yang ada dalam dataset.

**Tujuan**: Memastikan bahwa kategori yang ada dalam dataset tidak ada kesalahan atau duplikasi yang tidak sesuai.
"""

# Menampilkan jumlah kategori unik pada kolom 'kategori' dan 'preferensi'
print("Jumlah kategori unik di 'kategori':", df['kategori'].nunique())
print("Jumlah kategori unik di 'preferensi':", df['preferensi'].nunique())

"""#### **Langkah 4.3: Memeriksa Nilai Missing**

Setelah itu, kita perlu memeriksa kolom mana saja yang memiliki nilai hilang (missing values) dan berapa banyaknya. Ini penting untuk memutuskan apakah kita perlu menghapus atau mengisi nilai yang hilang tersebut.

**Tujuan**: Mengetahui kolom mana yang memiliki nilai hilang, sehingga kita bisa mengambil keputusan apakah harus menghapus atau mengisi nilai yang hilang tersebut.
"""

# Memeriksa nilai yang hilang pada setiap kolom
missing_values = df.isnull().sum()
print(missing_values)

"""#### **Langkah 4.4: Analisis Kolom Kategorikal**

Kita juga dapat memvisualisasikan distribusi dari kolom kategorikal seperti **kategori** dan **preferensi** menggunakan grafik batang.

 **Tujuan**: Memahami seberapa banyak tempat wisata yang termasuk dalam masing-masing kategori.
"""

# Visualisasi distribusi kategori tempat wisata
plt.figure(figsize=(10, 6))
sns.countplot(y='kategori', data=df)
plt.title('Distribusi Kategori Tempat Wisata')
plt.xlabel('Jumlah Tempat Wisata')
plt.ylabel('Kategori')
plt.show()

"""#### **Langkah 4.5: Korelasi Antar Fitur**

Selanjutnya, kita ingin melihat korelasi antara fitur numerik, seperti **rating**, **latitude**, dan **longitude**. Ini bisa memberi wawasan tentang bagaimana beberapa fitur berhubungan satu sama lain.

**Tujuan**: Memahami hubungan antara fitur numerik dan apakah ada korelasi yang signifikan yang bisa dimanfaatkan.
"""

# Memeriksa korelasi antara fitur numerik
corr = df[['rating', 'latitude', 'longitude']].corr()

# Visualisasi korelasi menggunakan heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(corr, annot=True, cmap='coolwarm', linewidths=0.5)
plt.title('Korelasi antara Fitur Numerik')
plt.show()

"""#### **Langkah 4.6: Menangani Outliers**

Jika diperlukan, kita dapat memeriksa apakah ada **outliers** pada kolom numerik, seperti **rating** atau **latitude** dan **longitude**. Ini penting untuk menjaga kualitas model yang akan dibangun nanti.

 **Tujuan**: Mengidentifikasi nilai yang jauh lebih tinggi atau rendah dari nilai umum pada kolom **rating**, yang bisa menjadi outliers.
"""

# Boxplot untuk memeriksa outliers pada kolom rating
plt.figure(figsize=(10, 6))
sns.boxplot(x=df['rating'])
plt.title('Outliers pada Kolom Rating')
plt.show()

"""#### **Langkah 4.7: Menyimpulkan Hasil EDA**

Setelah melakukan **Exploratory Data Analysis (EDA)**, kita harus membuat **kesimpulan** mengenai dataset ini. Beberapa poin yang perlu diperhatikan:

* **Data sudah bersih**, tanpa missing values, sehingga tidak perlu langkah imputation.
*
::contentReference[oaicite:0]{index=0}
 
